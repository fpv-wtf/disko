import os, sys, SCons

opts = Variables('disko-demos.conf')
opts.AddVariables(
PathVariable('prefix',  'Installation directory', '/tmp/disko-demos', PathVariable.PathIsDirCreate),
PathVariable('destdir', 'Installation directory for cross-compile', 'none', PathVariable.PathAccept))

env = Environment(ENV = os.environ)

opts.Update(env)
opts.Save('disko-demos.conf', env)
Help(opts.GenerateHelpText(env))

# use environment variables to override defaults
if os.environ.has_key('CC'):
	env['CC'] = [os.environ['CC'].split()] 
if os.environ.has_key('CXX'):
	env['CXX'] = [os.environ['CXX'].split()] 
if os.environ.has_key('CXXFLAGS'):
	env['CCFLAGS'] = [os.environ['CXXFLAGS'].split()]
if os.environ.has_key('LDFLAGS'):
	env['LINKFLAGS'] = [os.environ['LDFLAGS'].split()]
if os.environ.has_key('PKG_CONFIG'):
	env['PKG_CONFIG'] = os.environ['PKG_CONFIG']
else:
	env['PKG_CONFIG'] = 'pkg-config'

env['CCFLAGS'].extend(['-I./inc'])

# Here are our installation paths:
if os.environ.has_key('DESTDIR'):
	env['destdir'] = os.environ['DESTDIR']
if env['destdir'] != 'none':
	idir_prefix = env['destdir']
	if env['prefix'] != 'none':
		idir_prefix += ('/' + env['prefix'])
else:
	idir_prefix = env['prefix']

#env['CXXCOMSTR']    = '  [CXX]    $SOURCE'
#env['LINKCOMSTR']   = '  [LD]     $TARGET'

def CheckPKGConfig(context, version):
	context.Message( 'Checking for pkg-config... ' )
	ret = context.TryAction(context.env['PKG_CONFIG'] + ' --atleast-pkgconfig-version=%s' % version)[0]
	context.Result( ret )
	return ret

def CheckPKG(context, name):
	context.Message( 'Checking for %s... ' % name )
	cmd = context.env['PKG_CONFIG'] + ' --cflags --libs \'%s\'' % name
	ret = context.TryAction(cmd)[0]
	context.Result(ret)
	if ret:
		try:
			context.env.ParseConfig(cmd)
		except OSError:
			ret = 0
	if not ret:
		print 'required package %s not found!' % name
		Exit(1)

conf = Configure(env, custom_tests = { 'CheckPKGConfig' : CheckPKGConfig,
										'CheckPKG'		 : CheckPKG },
				 clean = False, help = False)

if not ('-c' in sys.argv or '-h' in sys.argv):
	if not conf.CheckPKGConfig('0.15.0'):
		print 'pkg-config >= 0.15.0 not found.'
		Exit(1)
	conf.CheckPKG('disko >= 1.8.0')
	
env = conf.Finish()

demo = env.Program('bin/demo', Glob('src/*.cpp'))

install = env.Alias('install', [idir_prefix])

env.Install(idir_prefix + '/bin', demo)

etc = Glob(os.getcwd() + '/etc/*')
env.Install(idir_prefix + '/etc', etc)

share = Glob(os.getcwd() + '/share/*')
env.Install(idir_prefix + '/share/', share)
